Part A: Insert Multiple Fee Payments in a Transaction (Atomicity)
START TRANSACTION;
INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (1, 'Ashish', 5000.00, '2024-06-01');
INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (2, 'Smaran', 4500.00, '2024-06-02');
INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (3, 'Vaibhav', 5500.00, '2024-06-03');

COMMIT;

SELECT * FROM FeePayments;

Part B: Demonstrate ROLLBACK for Failed Payment Insertion
START TRANSACTION;
INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (4, 'Kiran', 4800.00, '2024-06-04');
INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (1, 'Ashish', -3000.00, '2024-06-05');
ROLLBACK;
SELECT * FROM FeePayments;

Part C: Simulate Partial Failure and Ensure Consistent State
START TRANSACTION;

INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (5, 'Rahul', 4700.00, '2024-06-06');
INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (6, NULL, 4900.00, '2024-06-07');
ROLLBACK;

SELECT * FROM FeePayments;

Part D: Verify ACID Compliance with Transaction Flow
START TRANSACTION;
INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (7, 'Nikhil', 5100.00, '2024-06-08');
INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (7, 'DuplicateID', 6000.00, '2024-06-09'); 
ROLLBACK;
SELECT * FROM FeePayments;
START TRANSACTION;
INSERT INTO FeePayments (payment_id, student_name, amount, payment_date)
VALUES (8, 'Meena', 5200.00, '2024-06-10');
COMMIT;
SELECT * FROM FeePayments;
